{"version":3,"file":"component---src-components-templates-recipe-details-js-2eb534350373bf14cd9d.js","mappings":"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","sources":["webpack://slurp-recipes/./src/components/templates/recipe-details-styles.js","webpack://slurp-recipes/./src/components/templates/recipe-details.js"],"sourcesContent":["import styled, { css } from \"styled-components\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport {\n  AiFillFacebook,\n  AiOutlineShareAlt,\n  AiFillPrinter,\n} from \"react-icons/ai\"\n\nconst maxWidth = css`\n  max-width: 900px;\n`\n\nconst IconsStyle = css`\n  /* position: absolute; */\n  right: -5rem;\n  top: 50%;\n  font-size: 4rem;\n  color: ${({ theme }) => theme.colors.secondaryColor};\n  /* z-index: 10000; */\n  cursor: pointer;\n\n  &:hover {\n    color: ${({ theme }) => theme.colors.darkerSecondary};\n  }\n`\n\nexport const IconsContainer = styled.div`\n  /* position: relative; */\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  gap: 3rem;\n  /* padding: 3rem 0; */\n  width: 100%;\n\n  @media only screen and (min-width: 768px) {\n    /* position: absolute; */\n    /* flex-direction: column; */\n    /* align-self: flex-end; */\n    gap: 1rem;\n    width: auto;\n  }\n\n  @media print {\n    display: none;\n  }\n`\n\nexport const FacebookIcon = styled(AiFillFacebook)`\n  ${IconsStyle}\n`\nexport const ShareIcon = styled(AiOutlineShareAlt)`\n  ${IconsStyle}\n`\nexport const PrintIcon = styled(AiFillPrinter)`\n  ${IconsStyle}\n`\n\nexport const Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 1rem;\n  min-height: 200vh;\n  width: 100%;\n  padding: 1rem;\n  padding-top: 7rem;\n\n  @media only screen and (min-width: 768px) {\n    ${maxWidth};\n    margin-top: 7rem;\n    left: 50%;\n    transform: translateX(-50%);\n  }\n  @page {\n    size: A4;\n  }\n\n  @media print {\n    padding: 0;\n    margin-top: 1rem;\n    max-width: 100%;\n    height: auto;\n    min-height: auto;\n  }\n`\n\nexport const GeneralContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n  height: auto;\n  width: 100%;\n  ${maxWidth}\n  border-radius: 6px;\n\n  @media only screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-between;\n    height: 500px;\n    max-height: 500px;\n    padding: 0;\n  }\n\n  @media print {\n    flex-direction: row;\n    justify-content: space-between;\n    height: 300px;\n    max-height: 300px;\n    padding: 0;\n  }\n`\n\nexport const RecipeImage = styled(GatsbyImage)`\n  height: 100%;\n  width: 100%;\n  aspect-ratio: 1/1;\n  object-fit: cover;\n  background-size: cover;\n  background-position: fixed;\n  border-radius: 6px;\n\n  @media only screen and (min-width: 768px) {\n    width: 60%;\n  }\n\n  @media print {\n    width: 60%;\n    height: 300px;\n  }\n`\n\nexport const ContentContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: space-around;\n  height: 100%;\n  width: 100%;\n  padding: 2.4rem;\n  background-color: ${({ theme }) => theme.colors.greenish};\n  border-radius: 6px;\n\n  @media only screen and (min-width: 768px) {\n    width: 40%;\n  }\n\n  @media print {\n    width: 40%;\n    height: 300px;\n  }\n`\n\nexport const RecipeHeader = styled.h2`\n  font-size: 3.2rem;\n  color: ${({ theme }) => theme.colors.fontColor};\n  @media only screen and (min-width: 768px) {\n    font-size: 4rem;\n  }\n  @media print {\n    font-size: 3rem;\n  }\n`\n\nexport const InfoBoxes = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 1rem 0;\n  gap: 1rem;\n  padding-bottom: 3rem;\n\n  @media print {\n    font-size: 1.6rem;\n  }\n`\nexport const InfoBox = styled.div`\n  display: flex;\n  flex-direction: column;\n`\nexport const InfoCategory = styled.p`\n  font-size: 2rem;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondarySupport};\n`\nexport const InfoValue = styled.p`\n  font-size: 2.8rem;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondaryColor};\n\n  @media print {\n    font-size: 1.6rem;\n  }\n`\n\nexport const RecipeWrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column-reverse;\n  gap: 1rem;\n\n  @media only screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n\n  @media print {\n    flex-direction: row;\n  }\n`\n\nexport const PreparationContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  align-self: flex-start;\n  min-height: 50vh;\n  padding: 2rem;\n  border-radius: 6px;\n  background-color: ${({ theme }) => theme.colors.lightGrey};\n  @media only screen and (min-width: 768px) {\n    width: 65%;\n  }\n  @media print {\n    width: 70%;\n  }\n`\nexport const PrepHeader = styled.h3`\n  font-size: 4rem;\n  margin: 2.4rem 0;\n  color: ${({ theme }) => theme.colors.darkerPrimary};\n  @media print {\n    font-size: 2.4rem;\n    margin: 0;\n  }\n`\nexport const StepList = styled.ol`\n  width: 100%;\n  list-style: upper-roman inside;\n  font-size: 1.6rem;\n  line-height: 2.4rem;\n  @media print {\n    font-size: 1.2rem;\n  }\n`\nexport const StepListItem = styled.li`\n  color: ${({ theme }) => theme.colors.fontColor};\n  padding: 2.4rem 0;\n  &::marker {\n    font-size: 4rem;\n    list-style-type: none;\n    line-height: 1.2rem;\n    color: ${({ theme }) => theme.colors.darkerPrimary};\n\n    @media print {\n      font-size: 2rem;\n    }\n  }\n`\nexport const IngredientsBox = styled.div`\n  position: static;\n  display: flex;\n  flex-direction: column;\n  /* align-items: center; */\n  width: 100%;\n  min-height: 300px;\n  max-height: 500px;\n  top: 8rem;\n  font-size: 1.4rem;\n  padding: 0 2.4rem;\n  border-radius: 6px;\n  background-color: ${({ theme }) => theme.colors.offGreenish};\n  overflow-y: scroll;\n\n  @media only screen and (min-width: 768px) {\n    position: sticky;\n    width: 35%;\n  }\n\n  @media print {\n    height: auto;\n    max-height: 100vh;\n    overflow-y: auto;\n  }\n\n  @media print {\n    position: static;\n    width: 30%;\n    height: auto;\n    font-size: 1.2rem;\n  }\n`\nexport const IngredientsHeader = styled.h3`\n  font-size: 2.4rem;\n  margin-top: 2rem;\n  color: ${({ theme }) => theme.colors.secondaryColor};\n`\nexport const IngredientsList = styled.ul`\n  width: 90%;\n  height: 100%;\n  padding: 2rem 1.6rem;\n  list-style: none;\n  list-style-position: inside;\n`\nexport const IngredientsItem = styled.li`\n  position: relative;\n  margin-bottom: 1.6rem;\n  font-size: 1.6rem;\n  &::before {\n    content: \"üçî\";\n    position: absolute;\n    margin-left: -20px;\n    margin-right: 10px;\n  }\n  @media print {\n    font-size: 1.2rem;\n    margin-bottom: 1rem;\n  }\n`\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { getImage } from \"gatsby-plugin-image\"\nimport { Helmet } from \"react-helmet\"\nimport {\n  IconsContainer,\n  FacebookIcon,\n  ShareIcon,\n  PrintIcon,\n  Wrapper,\n  GeneralContainer,\n  RecipeHeader,\n  RecipeImage,\n  ContentContainer,\n  InfoBox,\n  InfoCategory,\n  InfoValue,\n  InfoBoxes,\n  RecipeWrapper,\n  PreparationContainer,\n  PrepHeader,\n  StepList,\n  StepListItem,\n  IngredientsBox,\n  IngredientsHeader,\n  IngredientsList,\n  IngredientsItem,\n} from \"./recipe-details-styles\"\nimport AddRecipeModal from \"../organisms/AddRecipeModal/AddRecipeModal\"\n\nconst RecipeDetails = ({ data }) => {\n  const recipeInfo = data.strapiRecipes\n  const image = recipeInfo.img\n    ? getImage(recipeInfo.img.localFile.childImageSharp.gatsbyImageData)\n    : null\n\n  return (\n    <>\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <html lang=\"en\" />\n        <title>Siorb {recipeInfo.title}</title>\n        <meta\n          name=\"description\"\n          content=\"Przepisy, kt√≥re pokocha ca≈Ça rodzina!\"\n        />\n        <link rel=\"canonical\" href=\"http://localhost:8000/contact\" />\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n        <link\n          href=\"https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&family=Raleway:wght@400;700&display=swap\"\n          rel=\"stylesheet\"\n        />\n      </Helmet>\n      <Wrapper>\n        <GeneralContainer>\n          <RecipeImage image={image} alt=\"Food header img\" />\n\n          <ContentContainer>\n            <RecipeHeader>{recipeInfo.title}</RecipeHeader>\n\n            <InfoBoxes>\n              <InfoBox>\n                <InfoCategory>dieta</InfoCategory>\n                <InfoValue>\n                  {recipeInfo.diets[0] ? recipeInfo.diets[0].diets : \"balanced\"}\n                </InfoValue>\n              </InfoBox>\n              <InfoBox>\n                <InfoCategory>trudno≈õƒá</InfoCategory>\n                <InfoValue>\n                  {recipeInfo.difficulties[0]\n                    ? recipeInfo.difficulties[0].difficulties\n                    : \"?\"}\n                </InfoValue>\n              </InfoBox>\n              <InfoBox>\n                <InfoCategory>czas przygotowania</InfoCategory>\n                <InfoValue>{recipeInfo.time}min</InfoValue>\n              </InfoBox>\n              <InfoBox>\n                <InfoCategory>kalorie</InfoCategory>\n                <InfoValue> {parseInt(Math.random() * 1000)}kcal</InfoValue>\n              </InfoBox>\n            </InfoBoxes>\n            <IconsContainer>\n              <FacebookIcon />\n              <ShareIcon />\n              <PrintIcon onClick={() => window.print()} />\n            </IconsContainer>\n          </ContentContainer>\n        </GeneralContainer>\n\n        <RecipeWrapper>\n          <PreparationContainer>\n            <PrepHeader>Przygotowanie</PrepHeader>\n            <StepList>\n              {recipeInfo.preparation.split(\"*/*\").map((step, idx) => {\n                return <StepListItem key={idx}>{step.trim()}</StepListItem>\n              })}\n            </StepList>\n          </PreparationContainer>\n          <IngredientsBox>\n            <IngredientsHeader>Sk≈Çadniki</IngredientsHeader>\n            <IngredientsList>\n              {recipeInfo.ingredients.split(\"*/*\").map((step, idx) => {\n                return (\n                  <IngredientsItem key={idx}>{step.trim()}</IngredientsItem>\n                )\n              })}\n            </IngredientsList>\n          </IngredientsBox>\n        </RecipeWrapper>\n      </Wrapper>\n\n      <AddRecipeModal />\n    </>\n  )\n}\n\nexport default RecipeDetails\n\nexport const query = graphql`\n  query RecipeDetails($slug: String) {\n    strapiRecipes(title: { eq: $slug }) {\n      id\n      title\n      ingredients\n      preparation\n      time\n      types {\n        types\n      }\n      img {\n        localFile {\n          childImageSharp {\n            gatsbyImageData\n          }\n        }\n      }\n      diets {\n        diets\n      }\n      difficulties {\n        difficulties\n      }\n    }\n  }\n`\n"],"names":["maxWidth","css","IconsStyle","theme","colors","secondaryColor","darkerSecondary","IconsContainer","styled","FacebookIcon","AiFillFacebook","ShareIcon","AiOutlineShareAlt","PrintIcon","AiFillPrinter","Wrapper","GeneralContainer","RecipeImage","GatsbyImage","ContentContainer","greenish","RecipeHeader","fontColor","InfoBoxes","InfoBox","InfoCategory","secondarySupport","InfoValue","RecipeWrapper","PreparationContainer","lightGrey","PrepHeader","darkerPrimary","StepList","StepListItem","IngredientsBox","offGreenish","IngredientsHeader","IngredientsList","IngredientsItem","recipeInfo","data","strapiRecipes","image","img","getImage","localFile","childImageSharp","gatsbyImageData","Helmet","charSet","lang","title","name","content","rel","href","crossorigin","alt","diets","difficulties","time","parseInt","Math","random","onClick","window","print","preparation","split","map","step","idx","key","trim","ingredients","AddRecipeModal"],"sourceRoot":""}