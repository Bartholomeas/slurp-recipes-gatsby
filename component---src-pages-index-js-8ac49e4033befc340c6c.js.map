{"version":3,"file":"component---src-pages-index-js-8ac49e4033befc340c6c.js","mappings":"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","sources":["webpack://slurp-recipes/./src/components/templates/LandingSection/LandingSection.styles.js","webpack://slurp-recipes/./src/components/atoms/SearchButton/SearchButton.js","webpack://slurp-recipes/./src/components/molecules/SearchBar/SearchBar.js","webpack://slurp-recipes/./src/components/organisms/CardLight/CardLight.styles.js","webpack://slurp-recipes/./src/components/atoms/DifficultyIndicator/DifficultyIndicator.js","webpack://slurp-recipes/./src/components/organisms/CardLight/CardLight.js","webpack://slurp-recipes/./src/components/templates/LandingSection/LandingSection.js","webpack://slurp-recipes/./src/components/organisms/Card/Card.styles.js","webpack://slurp-recipes/./src/components/organisms/Card/Card.js","webpack://slurp-recipes/./src/components/organisms/FilterBar/FilterBar.styles.js","webpack://slurp-recipes/./src/components/atoms/FilterLabel/FilterHeader.js","webpack://slurp-recipes/./src/components/atoms/FilterOption/FilterOption.js","webpack://slurp-recipes/./src/components/molecules/FilterOptionsBody/FilterOptionsBody.js","webpack://slurp-recipes/./src/components/organisms/FilterBar/FilterBar.js","webpack://slurp-recipes/./src/components/templates/RecipesSection/RecipesSection.styles.js","webpack://slurp-recipes/./src/components/templates/RecipesSection/RecipesSection.js","webpack://slurp-recipes/./src/pages/index.js"],"sourcesContent":["import styled from \"styled-components\"\n\nexport const LandingWrapper = styled.header`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 6rem;\n  overflow: hidden;\n\n  @media only screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: center;\n    height: clamp(700px, 93vh, 1920px);\n    max-width: 1980px;\n    left: 50%;\n    transform: translateX(-50%);\n  }\n`\nexport const TextWrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  height: 100vh;\n  padding: 0 4rem;\n  gap: 3rem;\n  color: ${({ theme }) => theme.colors.lightGrey};\n  box-shadow: 3px 2px 10px -3px ${({ theme }) => theme.colors.shadow};\n\n  @media only screen and (min-width: 768px) {\n    width: 60%;\n  }\n`\nexport const LandingText = styled.h1`\n  margin-bottom: 2rem;\n  font-size: 4.8rem;\n  font-weight: 300;\n  text-align: left;\n  max-width: 600px;\n  @media only screen and (min-width: 576px) {\n    font-size: 5.4rem;\n  }\n  @media only screen and (min-width: 768px) {\n    font-size: 6rem;\n  }\n  @media only screen and (min-width: 1600px) {\n    font-size: 7rem;\n  }\n`\n\nexport const ColoredText = styled.span`\n  display: block;\n\n  color: ${({ theme }) => theme.colors.primaryColor};\n`\nexport const FeaturedRecipesWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  height: 100%;\n  width: 100%;\n  padding: 3rem;\n  background-color: ${({ theme }) => theme.colors.greenish};\n  box-shadow: 0px 0px 10px ${({ theme }) => theme.colors.shadow};\n\n  @media only screen and (min-width: 768px) {\n    height: 100%;\n    width: 40%;\n  }\n`\nexport const CardsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n  height: 100%;\n  width: 100%;\n  gap: 2rem;\n\n  @media only screen and (min-width: 768px) {\n    gap: 0rem;\n  }\n`\n\nexport const FeaturedRecipesHeader = styled.h2`\n  margin-bottom: 2.4rem;\n  color: ${({ theme }) => theme.colors.secondaryColor};\n  @media only screen and (min-width: 768px) {\n    font-size: 4rem;\n    margin-bottom: 0;\n    margin: 2rem 0;\n  }\n`\n","import React from \"react\"\nimport { AiOutlineKey } from \"react-icons/ai\"\nimport styled from \"styled-components\"\n\nconst SearchIcon = styled(AiOutlineKey)`\n  font-size: 2rem;\n  color: ${({ theme }) => theme.colors.fontColor};\n`\nconst Button = styled.button`\n  position: relative;\n  height: 100%;\n  padding: 0 1rem;\n  border: none;\n  background: none;\n  background-color: ${({ theme }) => theme.colors.secondaryColor};\n  border-radius: 0 6px 6px 0;\n  transition: background-color 0.3s;\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.darkerPrimary};\n  }\n`\n\nexport const SearchButton = () => {\n  return (\n    <Button type=\"submit\" onClick={e => e.preventDefault()}>\n      <SearchIcon />\n    </Button>\n  )\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { SearchButton } from \"../../atoms/SearchButton/SearchButton\"\n\nconst SearchWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  align-self: flex-start;\n  gap: 1rem;\n  width: 100%;\n  margin-bottom: 2.4rem;\n\n  @media only screen and (min-width: 768px) {\n    max-width: 300px;\n  }\n`\n\nconst SearchForm = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  border-radius: 6px;\n  gap: 1rem;\n`\n\nconst SearchLabel = styled.label`\n  font-size: 2rem;\n  color: ${({ theme }) => theme.colors.white};\n`\n\nconst SearchInput = styled.input`\n  padding: 1rem 1.6rem;\n  width: 100%;\n  color: ${({ theme }) => theme.colors.fontColor};\n  background: none;\n  background-color: ${({ theme }) => theme.colors.white};\n  border-radius: 6px 0 0 6px;\n  border: none;\n\n  &:focus {\n    border: none;\n    background-color: ${({ theme }) => theme.colors.grey};\n    outline: 1px solid lightgrey;\n  }\n`\n\nconst SearchBar = () => {\n  return (\n    <SearchWrapper>\n      <SearchLabel htmlFor=\"search-bar\">Wyszukaj przepisów</SearchLabel>\n      <SearchForm>\n        <SearchInput name=\"search-bar\" id=\"search-bar\" />\n        <SearchButton />\n      </SearchForm>\n    </SearchWrapper>\n  )\n}\n\nexport default SearchBar\n","import { Link } from \"gatsby\"\nimport styled from \"styled-components\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n  align-items: center;\n  justify-content: space-between;\n  height: 150px;\n  width: 100%;\n  max-width: 500px;\n  padding: 0.8rem;\n  background-color: ${({ theme }) => theme.colors.offGreenish};\n  border-radius: 6px;\n\n  box-shadow: 0px 2px 5px ${({ theme }) => theme.colors.shadow};\n  overflow: hidden;\n  transition: transform 0.2s;\n\n  &:hover {\n    transform: scale(0.98);\n  }\n`\nexport const TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: space-between;\n  height: 100%;\n  width: 60%;\n  padding: 0.8rem 2rem;\n  border-radius: 6px;\n  background-color: ${({ theme }) => theme.colors.greenish};\n`\nexport const Title = styled.p`\n  font-size: 2rem;\n  font-weight: 700;\n  color: ${({ theme }) => theme.colors.fontColor};\n`\nexport const CardLink = styled(Link)`\n  padding: 1rem 0;\n  text-decoration: none;\n  align-self: flex-end;\n  margin-right: 2rem;\n`\nexport const Button = styled.button`\n  color: ${({ theme }) => theme.colors.secondarySupport};\n  font-family: \"Raleway\", sans-serif;\n  font-weight: 700;\n  font-size: 1.6rem;\n  border: none;\n  background: none;\n  cursor: pointer;\n\n  &:hover {\n    color: ${({ theme }) => theme.colors.secondaryColor};\n  }\n`\nexport const ImageContainer = styled.div`\n  height: 100%;\n  width: 40%;\n  overflow: hidden;\n`\n\nexport const CardImage = styled(GatsbyImage)`\n  width: 100%;\n  height: 100%;\n`\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { theme } from \"../../../styles/theme\"\n\nexport const DifficultyWrapper = styled.div`\n  display: flex;\n  gap: 0.6rem;\n`\nexport const DifficultyLevel = styled.span`\n  width: 1.6rem;\n  height: 1.6rem;\n  color: white;\n  border: 2px solid ${({ theme }) => theme.colors.secondarySupport};\n  border-radius: 50%;\n  background-color: ${({ isFilled }) =>\n    isFilled ? theme.colors.secondarySupport : \"none\"};\n`\n\nconst DifficultyIndicator = ({ difficulty }) => {\n  difficulty === \"łatwe\"\n    ? (difficulty = 1)\n    : difficulty === \"średnie\"\n    ? (difficulty = 2)\n    : (difficulty = 3)\n\n  return (\n    <DifficultyWrapper>\n      <DifficultyLevel\n        isFilled={difficulty >= 1 ? true : false}\n      ></DifficultyLevel>\n      <DifficultyLevel\n        isFilled={difficulty >= 2 ? true : false}\n      ></DifficultyLevel>\n      <DifficultyLevel\n        isFilled={difficulty === 3 ? true : false}\n      ></DifficultyLevel>\n    </DifficultyWrapper>\n  )\n}\n\nexport default DifficultyIndicator\n","import React from \"react\"\nimport { getImage } from \"gatsby-plugin-image\"\nimport {\n  CardLink,\n  Wrapper,\n  TextContainer,\n  Title,\n  Button,\n  ImageContainer,\n  CardImage,\n} from \"./CardLight.styles\"\nimport DifficultyIndicator from \"../../atoms/DifficultyIndicator/DifficultyIndicator\"\n\nconst CardLight = ({ payload }) => {\n  const { title = \"?\", difficulties = \"easy\", img = \"\" } = payload\n\n  const image = img ? getImage(img.localFile.childImageSharp) : {}\n  return (\n    <Wrapper>\n      <TextContainer>\n        <Title>{title}</Title>\n        <DifficultyIndicator difficulty={difficulties[0][\"difficulties\"]} />\n        <CardLink to={`/${title.toLowerCase().replace(/\\s/g, \"_\")}`}>\n          <Button>sprawdź →</Button>\n        </CardLink>\n      </TextContainer>\n\n      <ImageContainer>\n        <CardImage\n          image={image}\n          alt=\"Featured recipe photo\"\n          placeholder=\"blurred\"\n        ></CardImage>\n        {/* <CardImage\n            style={{\n              height: \"100%\",\n              width: \"100%\",\n              backgroundSize: \"cover\",\n              backgroundAttachment: \"fixed\",\n            }}\n            image={image}\n            src={image}\n            // src=\"../../../images/landing2.jpg\"\n            placeholder=\"blurred\"\n            alt=\"Featured recipe photo\"\n          /> */}\n      </ImageContainer>\n    </Wrapper>\n  )\n}\n\nexport default CardLight\n","import React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport SearchBar from \"../../molecules/SearchBar/SearchBar\"\nimport {\n  LandingWrapper,\n  TextWrapper,\n  LandingText,\n  FeaturedRecipesWrapper,\n  FeaturedRecipesHeader,\n  CardsContainer,\n  ColoredText,\n} from \"./LandingSection.styles\"\nimport CardLight from \"../../organisms/CardLight/CardLight\"\n\nconst LandingSection = () => {\n  const {\n    allStrapiRecipes: { nodes: recipes },\n  } = useStaticQuery(graphql`\n    query GetFeaturedRecipes {\n      allStrapiRecipes(limit: 3) {\n        nodes {\n          id\n          difficulties {\n            difficulties\n          }\n          title\n          img {\n            localFile {\n              childImageSharp {\n                gatsbyImageData(width: 300, placeholder: BLURRED)\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  // const windowGlobal = typeof window !== \"undefined\" && window\n  // useEffect(() => {\n  //   const token = JSON.parse(windowGlobal.localStorage.getItem(\"token\"))\n  //   const getRecipesOfTheDay = async () => {\n  //     await axios\n  //       .get(`${process.env.STRAPI_URL}/recipes`, {\n  //         headers: {\n  //           Authorization: `Bearer ${token}`,\n  //         },\n  //       })\n  //       .then(({ data }) => {\n  //         for (let i = 0; i < 3; i++) {\n  //           // console.log(recipes[i][\"img\"][\"url\"])\n  //           setFeaturedRecipes(featuredRecipes => [...featuredRecipes, data[i]])\n  //         }\n  //       })\n  //   }\n  //   getRecipesOfTheDay()\n  //   return () => setFeaturedRecipes([])\n  // }, [])\n\n  return (\n    <LandingWrapper>\n      <TextWrapper>\n        <LandingText>\n          Najlepsze smaki tylko z <ColoredText>naszymi przepisami</ColoredText>\n        </LandingText>\n        <StaticImage\n          style={{\n            position: \"absolute\",\n            height: \"100%\",\n            width: \"100%\",\n            backgroundSize: \"cover\",\n            zIndex: \"-10\",\n            filter: \"brightness(20%)\",\n            backgroundAttachment: \"fixed\",\n            alignSelf: \"center\",\n          }}\n          src=\"../../../images/landing.jpg\"\n          placeholder=\"blurred\"\n          alt=\"Pancakes with syrup\"\n        />\n        {/* <SearchBar /> */}\n      </TextWrapper>\n\n      <FeaturedRecipesWrapper>\n        <FeaturedRecipesHeader>Przepisy dnia</FeaturedRecipesHeader>\n        <CardsContainer>\n          {recipes.map(recipe => {\n            return <CardLight payload={recipe} key={recipe.id} />\n          })}\n        </CardsContainer>\n      </FeaturedRecipesWrapper>\n    </LandingWrapper>\n  )\n}\nexport default LandingSection\n","import styled, { css } from \"styled-components\"\nimport { Link } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nconst flexColumn = css`\n  display: flex;\n  flex-direction: column;\n`\n\nexport const CardWrapper = styled.div`\n  ${flexColumn}\n  align-items: flex-start;\n  justify-content: space-evenly;\n  height: 100%;\n  width: 100%;\n  padding: 0.8rem;\n  box-shadow: 0px 2px 5px ${({ theme }) => theme.colors.shadow};\n  background-color: ${({ theme }) => theme.colors.lightGrey};\n  border-radius: 6px;\n  overflow: hidden;\n  cursor: pointer;\n  transition: transform 0.2s;\n\n  &:hover {\n    transform: scale(0.98);\n  }\n\n  @media only screen and (min-width: 768px) {\n    margin: 0;\n    margin-bottom: 2rem;\n    text-decoration: none;\n  }\n`\n\nexport const CardImg = styled(GatsbyImage)`\n  background-size: cover;\n  background-position: center;\n  height: 60%;\n  border-radius: 6px 6px 0 0;\n`\n\nexport const CardLink = styled(Link)`\n  text-decoration: none;\n  width: 250px;\n  height: 350px;\n`\nexport const CardInfoContainer = styled.div`\n  ${flexColumn}\n  height: 40%;\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.white};\n  padding: 1rem 1.6rem 2rem;\n`\nexport const CardLabelTitle = styled.p`\n  font-size: 2rem;\n  align-self: flex-start;\n  flex-grow: 1;\n  font-weight: 700;\n  color: ${({ theme }) => theme.colors.fontColor};\n`\n\nexport const CardInfoHeaderContainer = styled.div`\n  ${flexColumn}\n  justify-content: space-between;\n  height: 100%;\n`\nexport const CardInfoBottomContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  width: 100%;\n  border-radius: 6px;\n`\nexport const CardRecipeInfos = styled.p`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 1rem;\n  color: ${({ theme }) => theme.colors.darkGrey};\n  font-size: 1.6rem;\n`\nexport const Circle = styled.span`\n  height: 0.8rem;\n  width: 0.8rem;\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.colors.darkGrey};\n`\n\nexport const RecipeTime = styled.p`\n  color: ${({ theme }) => theme.colors.secondaryColor};\n  font-size: 1.8rem;\n  font-family: \"Poppins\", sans-serif;\n`\n","import React from \"react\"\nimport { getImage } from \"gatsby-plugin-image\"\nimport {\n  CardLink,\n  CardWrapper,\n  CardImg,\n  CardInfoContainer,\n  CardInfoHeaderContainer,\n  CardRecipeInfos,\n  Circle,\n  CardLabelTitle,\n  CardInfoBottomContainer,\n} from \"./Card.styles\"\nimport DifficultyIndicator from \"../../atoms/DifficultyIndicator/DifficultyIndicator\"\n\nconst Card = ({ payload }) => {\n  const {\n    difficulties: difficulty = \"none\",\n    img = \"\",\n    title = \"none\",\n    diets = \"none\",\n    types: type = \"none\",\n  } = payload\n  const image = img ? getImage(img.localFile.childImageSharp) : {}\n\n  return (\n    <CardLink to={`/${title.toLowerCase().replace(/\\s/g, \"_\")}`}>\n      <CardWrapper>\n        {image ? <CardImg image={image} alt=\"Food image\" /> : null}\n        <CardInfoContainer>\n          <CardInfoHeaderContainer>\n            <CardRecipeInfos>\n              {type[0] ? type[0].types : \"?\"}\n              <Circle />\n              {diets[0] ? diets[0].diets : \"?\"}\n            </CardRecipeInfos>\n            <CardLabelTitle>{title}</CardLabelTitle>\n          </CardInfoHeaderContainer>\n\n          <CardInfoBottomContainer>\n            <DifficultyIndicator\n              difficulty={difficulty[0] ? difficulty[0].difficulties : \"easy\"}\n            />\n          </CardInfoBottomContainer>\n        </CardInfoContainer>\n      </CardWrapper>\n    </CardLink>\n  )\n}\n\nexport default Card\n","import styled from \"styled-components\"\nimport Button from \"../../atoms/Button/Button\"\n\nexport const FilterWrapper = styled.div`\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  align-self: flex-start;\n  height: 100vh;\n  width: 100%;\n  margin-top: 4rem;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%)\n    scale(${({ isOpen }) => (isOpen ? \"1\" : \"0\")});\n  transform-origin: left bottom;\n  background-color: ${({ theme }) => theme.colors.greenish};\n  border-radius: 6px;\n  overflow: hidden;\n  transition: transform 0.2s ease-in;\n  z-index: 200;\n  @media only screen and (min-width: 768px) {\n    position: relative;\n    display: flex;\n    min-height: 100%;\n    max-width: 200px;\n    left: 0;\n    top: 0;\n    transform: translate(0);\n    z-index: 0;\n    opacity: 1;\n  }\n`\n\nexport const FilterHeader = styled.p`\n  margin-bottom: 2rem;\n  color: ${({ theme }) => theme.colors.fontColor};\n  font-size: 2.6rem;\n  font-weight: bold;\n  text-align: center;\n`\n\nexport const FilterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 90%;\n  width: 100%;\n  padding: 2rem 0;\n  overflow-y: auto;\n  @media only screen and (min-width: 768px) {\n    padding: 0;\n    align-items: center;\n  }\n`\n\nexport const ClearButton = styled(Button)``\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst FilterOptionHeaderText = styled.p`\n  margin-bottom: 1rem;\n  font-weight: bold;\n  font-size: 2.4rem;\n  color: ${({ theme }) => theme.colors.secondaryColor};\n`\n\nexport const FilterOptionHeader = ({ content }) => {\n  return (\n    <FilterOptionHeaderText htmlFor=\"difficulty\">\n      {content}\n    </FilterOptionHeaderText>\n  )\n}\n","import React, { useContext } from \"react\"\nimport styled from \"styled-components\"\nimport { StateContext } from \"../../../context/StateContext\"\n\nconst FilterOptionWrapper = styled.div`\n  margin-bottom: 0.8rem;\n`\nconst FilterOptionText = styled.input`\n  color: ${({ theme }) => theme.colors.fontColor};\n`\nconst FilterOptionLabel = styled.label`\n  font-family: \"Poppins\", sans-serif;\n  font-size: 1.4rem;\n  color: ${({ theme }) => theme.colors.fontColor};\n`\n\nexport const FilterOption = ({ name, option = \"\", id }) => {\n  const { info, setInfo } = useContext(StateContext)\n\n  const getSpecificRecipes = input => {\n    setInfo({ ...info, [input.target.name]: option[0] })\n  }\n\n  return (\n    <FilterOptionWrapper>\n      <FilterOptionText\n        isChecker={false}\n        onClick={e => getSpecificRecipes(e)}\n        name={name}\n        type=\"radio\"\n        id={`${option}-${id}`}\n      ></FilterOptionText>\n      <FilterOptionLabel htmlFor={`${option}-${id}`}>\n        {option}\n      </FilterOptionLabel>\n    </FilterOptionWrapper>\n  )\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { FilterOptionHeader } from \"../../atoms/FilterLabel/FilterHeader\"\nimport { FilterOption } from \"../../atoms/FilterOption/FilterOption\"\n\nconst FilterWrapper = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  width: 30%;\n  margin-bottom: 3rem;\n  @media only screen and (min-width: 768px) {\n    width: 70%;\n  }\n`\n\nconst FilterOptionsBody = ({ content, ...props }) => {\n  return (\n    <FilterWrapper>\n      <FilterOptionHeader content={Object.keys(content[0])} />\n      {content\n        ? content.map((el, idx) => (\n            <FilterOption\n              key={idx}\n              name={Object.keys(content[0])}\n              option={Object.values(el)}\n              id={idx}\n            />\n          ))\n        : null}\n    </FilterWrapper>\n  )\n}\n\nexport default FilterOptionsBody\n","import React, { useContext } from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { FilterWrapper, FilterContainer, ClearButton } from \"./FilterBar.styles\"\nimport FilterOptionsBody from \"../../molecules/FilterOptionsBody/FilterOptionsBody\"\nimport { StateContext } from \"../../../context/StateContext\"\n\nconst FilterBar = ({ isOpen, clearFiltering }) => {\n  const data = useStaticQuery(graphql`\n    query Filters {\n      allStrapiDifficulties {\n        nodes {\n          difficulties\n        }\n      }\n      allStrapiTypes {\n        nodes {\n          types\n        }\n      }\n      allStrapiDiets {\n        nodes {\n          diets\n        }\n      }\n    }\n  `)\n\n  const diets = data.allStrapiDiets.nodes\n  const difficulties = data.allStrapiDifficulties.nodes\n  const types = data.allStrapiTypes.nodes\n\n  const { setInfo, setSearchedRecipes } = useContext(StateContext)\n\n  const initialState = {\n    diets: \"\",\n    difficulties: \"\",\n    types: \"\",\n  }\n\n  const clearAllRadioButtons = async () => {\n    if (window !== \"undefined\") {\n      await document.querySelectorAll(\"input[type='radio\").forEach(input => {\n        input.checked = false\n      })\n    }\n  }\n\n  const clearState = () => {\n    clearAllRadioButtons()\n    setInfo(initialState)\n    clearFiltering()\n    setSearchedRecipes([])\n  }\n\n  return (\n    <FilterWrapper isOpen={isOpen}>\n      <FilterContainer>\n        <FilterOptionsBody props={diets} content={diets} />\n        <FilterOptionsBody props={difficulties} content={difficulties} />\n        <FilterOptionsBody props={types} content={types} />\n        <ClearButton\n          onClick={() => {\n            clearState()\n          }}\n        >\n          Wyczyść\n        </ClearButton>\n      </FilterContainer>\n    </FilterWrapper>\n  )\n}\n\nexport default FilterBar\n","import styled from \"styled-components\"\nimport { BsFilterCircleFill } from \"react-icons/bs\"\n\nexport const RecipesWrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  padding-top: 6rem;\n  margin-bottom: 2rem;\n  background-color: ${({ theme }) => theme.colors.white};\n  @media only screen and (min-width: 768px) {\n    flex-direction: row;\n    align-items: flex-start;\n    justify-content: flex-start;\n    justify-content: center;\n    width: auto;\n    max-width: 1600px;\n    margin: 0 auto;\n  }\n`\nexport const RecipesContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 4rem 0;\n  @media only screen and (min-width: 768px) {\n    flex-direction: row;\n    align-items: flex-start;\n    padding: 0 1rem;\n    margin-top: 4rem;\n    gap: 2rem;\n    overflow-y: auto;\n  }\n`\n\nexport const CardsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-items: center;\n  gap: 3rem;\n  @media only screen and (min-width: 768px) {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    grid-template-rows: 350px;\n    gap: 2rem;\n    width: 100%;\n    height: 100vh;\n    /* padding-bottom: 3rem; */\n    padding-right: 1rem;\n    padding: 0.2rem 0 2rem 1rem;\n    /* overflow-y: scroll; */\n  }\n  @media only screen and (min-width: 1015px) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n  @media only screen and (min-width: 1280px) {\n    grid-template-columns: repeat(4, 1fr);\n  }\n  @media only screen and (min-width: 1600px) {\n    grid-template-columns: repeat(5, 1fr);\n  }\n`\n\nexport const FiltersButton = styled.button`\n  position: fixed;\n  bottom: 2rem;\n  left: 2rem;\n  color: ${({ theme }) => theme.colors.secondaryColor};\n  background: none;\n  border: none;\n  font-size: 4rem;\n  cursor: pointer;\n  z-index: 1000;\n  @media only screen and (min-width: 768px) {\n    display: none;\n  }\n\n  &:hover {\n    transform: scale(0.95);\n  }\n`\n\nexport const FilterIcon = styled(BsFilterCircleFill)`\n  align-self: normal;\n`\n","import React, { useState, useContext, useEffect } from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport Card from \"../../organisms/Card/Card\"\nimport FilterBar from \"../../organisms/FilterBar/FilterBar\"\nimport {\n  RecipesContainer,\n  RecipesWrapper,\n  FiltersButton,\n  CardsContainer,\n  FilterIcon,\n} from \"./RecipesSection.styles\"\nimport { StateContext } from \"../../../context/StateContext\"\n\nconst RecipesSection = () => {\n  const data = useStaticQuery(graphql`\n    query GetRecipes {\n      allStrapiRecipes {\n        nodes {\n          ingredients\n          id\n          difficulties {\n            difficulties\n          }\n          diets {\n            diets\n          }\n          types {\n            types\n          }\n          title\n          time\n          preparation\n          img {\n            localFile {\n              childImageSharp {\n                gatsbyImageData(width: 300)\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const [recipes] = useState(data.allStrapiRecipes.nodes)\n  const [isOpen, setIsOpen] = useState(false)\n  const { searchedRecipes, setSearchedRecipes } = useContext(StateContext)\n  const [filteredRecipes, setFilteredRecipes] = useState([])\n  const {\n    info,\n    info: { diets, difficulties, types },\n  } = useContext(StateContext)\n  let checkedInfos = []\n\n  const filterBarHandler = () => {\n    setIsOpen(!isOpen)\n  }\n\n  const clearFiltering = () => {\n    checkedInfos = []\n    setFilteredRecipes([])\n  }\n\n  const checkRecipeTruthy = (recipe, idx) => {\n    const infoKey = checkedInfos[idx - 1]\n\n    if (recipe[infoKey][0][infoKey] === info[infoKey]) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  useEffect(() => {\n    if (info.diets || info.difficulties || info.types) {\n      for (const key in info) {\n        if (info[key] !== \"\") {\n          checkedInfos.push(key)\n        }\n      }\n\n      if (checkedInfos.length === 1) {\n        recipes.forEach(recipe => {\n          if (\n            recipe[checkedInfos[0]][0][checkedInfos[0]] ===\n            info[checkedInfos[0]]\n          ) {\n            setFilteredRecipes(filteredRecipes => [...filteredRecipes, recipe])\n            setSearchedRecipes(searchedRecipes => [...searchedRecipes, recipe])\n          }\n        })\n      }\n\n      if (checkedInfos.length > 1) {\n        filteredRecipes.forEach(recipe => {\n          if (checkRecipeTruthy(recipe, checkedInfos.length)) {\n            setSearchedRecipes([])\n            setSearchedRecipes(searchedRecipes => [...searchedRecipes, recipe])\n          }\n        })\n      }\n    }\n\n    return () => {\n      setSearchedRecipes([])\n    }\n  }, [diets, types, difficulties])\n\n  return (\n    <RecipesWrapper>\n      <FilterBar isOpen={isOpen} clearFiltering={clearFiltering} />\n      <RecipesContainer>\n        <FiltersButton>\n          <FilterIcon onClick={filterBarHandler} />\n        </FiltersButton>\n        <CardsContainer>\n          {info.diets || info.difficulties || info.types\n            ? searchedRecipes.map(recipe => {\n                return <Card key={recipe.id} payload={recipe} />\n              })\n            : recipes.map(recipe => {\n                return <Card key={recipe.id} payload={recipe} />\n              })}\n        </CardsContainer>\n      </RecipesContainer>\n    </RecipesWrapper>\n  )\n}\n\nexport default RecipesSection\n","import React from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport AddRecipeModal from \"../components/organisms/AddRecipeModal/AddRecipeModal\"\nimport LandingSection from \"../components/templates/LandingSection/LandingSection\"\nimport RecipesSection from \"../components/templates/RecipesSection/RecipesSection\"\n\nconst Home = () => {\n  return (\n    <>\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <html lang=\"en\" />\n        <title>Top Recipes by s:urp</title>\n        <meta\n          name=\"description\"\n          content=\"Best recipes that will be loved by everyone of your family, friends, kids or animals!\"\n        />\n        <link rel=\"canonical\" href=\"http://localhost:8000/\" />\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n        <link\n          href=\"https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&family=Raleway:wght@400;700&display=swap\"\n          rel=\"stylesheet\"\n        />\n      </Helmet>\n      <LandingSection />\n      <RecipesSection />\n      <AddRecipeModal />\n    </>\n  )\n}\nexport default Home\n"],"names":["LandingWrapper","styled","AiOutlineKey","theme","colors","fontColor","secondaryColor","darkerPrimary","white","grey","TextWrapper","lightGrey","shadow","LandingText","ColoredText","primaryColor","FeaturedRecipesWrapper","greenish","CardsContainer","FeaturedRecipesHeader","Wrapper","offGreenish","TextContainer","Title","CardLink","Link","Button","secondarySupport","ImageContainer","CardImage","GatsbyImage","DifficultyWrapper","DifficultyLevel","isFilled","difficulty","payload","title","difficulties","img","image","getImage","localFile","childImageSharp","to","toLowerCase","replace","alt","placeholder","recipes","useStaticQuery","allStrapiRecipes","nodes","S","style","position","height","width","backgroundSize","zIndex","filter","backgroundAttachment","alignSelf","src","map","recipe","key","id","flexColumn","css","CardWrapper","CardImg","CardInfoContainer","CardLabelTitle","CardInfoHeaderContainer","CardInfoBottomContainer","CardRecipeInfos","darkGrey","Circle","diets","types","type","FilterWrapper","isOpen","FilterContainer","ClearButton","FilterOptionHeaderText","FilterOptionHeader","content","htmlFor","FilterOptionWrapper","FilterOptionText","FilterOptionLabel","FilterOption","name","option","useContext","StateContext","info","setInfo","isChecker","onClick","e","input","target","Object","keys","el","idx","values","clearFiltering","data","allStrapiDiets","allStrapiDifficulties","allStrapiTypes","setSearchedRecipes","initialState","clearAllRadioButtons","window","document","querySelectorAll","forEach","checked","props","RecipesWrapper","RecipesContainer","FiltersButton","FilterIcon","BsFilterCircleFill","useState","setIsOpen","searchedRecipes","filteredRecipes","setFilteredRecipes","checkedInfos","useEffect","push","length","infoKey","checkRecipeTruthy","Helmet","charSet","lang","rel","href","crossorigin","AddRecipeModal"],"sourceRoot":""}