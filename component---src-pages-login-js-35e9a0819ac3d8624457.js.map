{"version":3,"file":"component---src-pages-login-js-35e9a0819ac3d8624457.js","mappings":"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","sources":["webpack://slurp-recipes/./src/components/atoms/ErrorText/ErrorText.js","webpack://slurp-recipes/./src/components/molecules/LoadingPopup/LoadingPopup.js","webpack://slurp-recipes/./src/components/organisms/LoginPanel/LoginPanel.js","webpack://slurp-recipes/./src/pages/login.js","webpack://slurp-recipes/./src/styles/joinPanel.styles.js"],"sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { BsExclamationCircle } from \"react-icons/bs\"\n\nconst ErrorBox = styled.span`\n  display: flex;\n  align-items: center;\n  font-family: \"Poppins\", sans-serif;\n  font-size: 1.4rem;\n  padding: 1.3rem 0.8rem;\n  margin: 2rem 0;\n  border-radius: ${({ theme }) => theme.otherStyles.smallRadius};\n  background-color: ${({ theme }) => theme.colors.errorColor};\n  color: ${({ theme }) => theme.colors.white};\n`\n\nconst ErrorIcon = styled(BsExclamationCircle)`\n  color: ${({ theme }) => theme.colors.white};\n  margin-right: 0.8rem;\n`\n\nconst ErrorText = ({ children }) => {\n  return (\n    <ErrorBox>\n      <ErrorIcon />\n      {children}\n    </ErrorBox>\n  )\n}\n\nexport default ErrorText\n","import React from \"react\"\nimport styled, { keyframes } from \"styled-components\"\n\nexport const Wrapper = styled.div`\n  display: flex;\n  position: fixed;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 1rem;\n  margin: 0 auto;\n  height: 160px;\n  width: 160px;\n  border-radius: ${({ theme }) => theme.otherStyles.smallRadius};\n  background-color: rgba(0, 0, 0, 0.5);\n  color: ${({ theme }) => theme.colors.white};\n  box-shadow: ${({ theme }) => theme.otherStyles.shadow};\n  z-index: 99999;\n`\nconst spinner = keyframes`\nfrom {\n    transform: translate3d(-50%, -50%, 0) rotate(0deg);\n}\nto {\n    transform:translate3d(-50%, -50%, 0) rotate(360deg);\n}\n`\n\nexport const Circle = styled.span`\n  height: 40px;\n  &::before {\n    content: \"\";\n    position: fixed;\n    height: 60px;\n    width: 60px;\n    border: solid 8px ${({ theme }) => theme.colors.darkGrey};\n    border-bottom-color: ${({ theme }) => theme.colors.base};\n    border-radius: ${({ theme }) => theme.otherStyles.bigRadius};\n    animation: 1.5s linear infinite ${spinner};\n    transform: translate3d(-50%, -50%, 0);\n  }\n`\n\nexport const LoadingText = styled.p`\n  font-size: 2.4rem;\n`\n\nconst LoadingPopup = () => {\n  return (\n    <Wrapper>\n      <Circle />\n      <LoadingText>Czekaj..</LoadingText>\n    </Wrapper>\n  )\n}\n\nexport default LoadingPopup\n","import React, { useState, useContext } from \"react\"\nimport axios from \"axios\"\nimport Button from \"../../atoms/Button/Button\"\nimport { navigate } from \"gatsby\"\nimport { StateContext } from \"../../../context/StateContext\"\nimport {\n  JoinPanelWrapper,\n  JoinHeader,\n  JoinForm,\n  JoinLink,\n  ColoredText,\n} from \"../../../styles/joinPanel.styles\"\nimport FormField from \"../../molecules/FormField/FormField\"\nimport ErrorText from \"../../atoms/ErrorText/ErrorText\"\nimport LoadingPopup from \"../../molecules/LoadingPopup/LoadingPopup\"\n\nconst LoginPanel = () => {\n  const [isLoading, setIsLoading] = useState(false)\n  const [isValid, setIsValid] = useState(true)\n  const { setIsAuthenticated } = useContext(StateContext)\n  const loginInput = React.createRef({})\n  const passwordInput = React.createRef({})\n  let errorInput\n\n  const setErrorStatus = (inputName, remove = false) => {\n    if (typeof window !== \"undefined\") {\n      if (remove === true) {\n        document\n          .querySelector(`input[id='${inputName}']`)\n          .classList.remove(\"invalid\")\n      } else {\n        errorInput = document.querySelector(`input[id='${inputName}']`)\n        errorInput.classList.add(\"invalid\")\n        errorInput.setAttribute(\"className\", \"invalid\")\n      }\n    }\n  }\n  const authorizeUser = async e => {\n    e.preventDefault()\n    setIsLoading(true)\n    await axios\n      .post(`${process.env.STRAPI_URL}/auth/local`, {\n        identifier: loginInput.current.value,\n        password: passwordInput.current.value,\n      })\n      .then(data => {\n        localStorage.setItem(\"token\", JSON.stringify(data.data.jwt))\n        localStorage.setItem(\"user\", JSON.stringify(data.data.user.username))\n        setIsLoading(false)\n        setIsAuthenticated(true)\n        navigate(\"/\")\n      })\n      .catch(error => {\n        setIsLoading(false)\n        setErrorStatus(\"login\")\n        setErrorStatus(\"password\")\n        setIsValid(false)\n        setIsAuthenticated(false)\n      })\n  }\n\n  return (\n    <>\n      <JoinPanelWrapper>\n        <JoinHeader>Zaloguj się.</JoinHeader>\n        <JoinForm>\n          <FormField nameId=\"login\" content=\"Login\" ref={loginInput} />\n          <FormField\n            nameId=\"password\"\n            type=\"password\"\n            content=\"Hasło\"\n            ref={passwordInput}\n          />\n          {!isValid ? <ErrorText>Niepoprawny login lub hasło</ErrorText> : null}\n          <Button isLong type=\"submit\" onClick={e => authorizeUser(e)}>\n            Zaloguj się\n          </Button>\n        </JoinForm>\n        <JoinLink to=\"/register\">\n          Nie masz konta? <ColoredText>Zarejestruj się.</ColoredText>\n        </JoinLink>\n      </JoinPanelWrapper>\n      {isLoading ? <LoadingPopup /> : null}\n    </>\n  )\n}\n\nexport default LoginPanel\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport LoginPanel from \"../components/organisms/LoginPanel/LoginPanel\"\n\nconst LoginWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 90vh;\n  margin-top: 7rem;\n  background-color: ${({ theme }) => theme.colors.base};\n\n  @media only screen and (min-width: 768px) {\n    padding: 3rem;\n  }\n`\nconst Login = () => {\n  return (\n    <LoginWrapper>\n      <LoginPanel />\n    </LoginWrapper>\n  )\n}\n\nexport default Login\n","import { Link } from \"gatsby\"\nimport styled from \"styled-components\"\n\nexport const JoinPanelWrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  justify-content: center;\n  height: auto;\n  width: 100%;\n  padding: 3rem;\n  border-radius: ${({ theme }) => theme.otherStyles.smallRadius};\n  box-shadow: 3px 2px 10px -3px ${({ theme }) => theme.otherStyles.shadow};\n  background-color: ${({ theme }) => theme.colors.white};\n  overflow: hidden;\n\n  @media only screen and (min-width: 768px) {\n    height: auto;\n    max-width: 600px;\n  }\n`\nexport const JoinHeader = styled.p`\n  font-weight: 300;\n  font-size: 3.2rem;\n  color: ${({ theme }) => theme.colors.fontColor};\n`\nexport const JoinForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding-top: 2rem;\n\n  @media only screen and (min-width: 768px) {\n  }\n`\nexport const JoinLink = styled(Link)`\n  text-decoration: none;\n  color: ${({ theme }) => theme.colors.darkGrey};\n`\nexport const ColoredText = styled.span`\n  color: ${({ theme }) => theme.colors.accent};\n`\nexport const PasswordInfoText = styled.p`\n  display: flex;\n  align-items: flex-start;\n  color: ${({ theme }) => theme.colors.darkGrey};\n  font-size: 1.6rem;\n  margin-bottom: 1.6rem;\n`\n"],"names":["ErrorBox","styled","theme","otherStyles","smallRadius","colors","errorColor","white","ErrorIcon","BsExclamationCircle","children","Wrapper","shadow","spinner","keyframes","Circle","darkGrey","base","bigRadius","LoadingText","errorInput","useState","isLoading","setIsLoading","isValid","setIsValid","setIsAuthenticated","useContext","StateContext","loginInput","React","passwordInput","setErrorStatus","inputName","remove","window","document","querySelector","classList","add","setAttribute","authorizeUser","e","preventDefault","axios","process","identifier","current","value","password","then","data","localStorage","setItem","JSON","stringify","jwt","user","username","navigate","catch","error","FormField","nameId","content","ref","type","ErrorText","Button","isLong","onClick","to","LoadingPopup","LoginWrapper","JoinPanelWrapper","JoinHeader","fontColor","JoinForm","JoinLink","Link","ColoredText","accent","PasswordInfoText"],"sourceRoot":""}