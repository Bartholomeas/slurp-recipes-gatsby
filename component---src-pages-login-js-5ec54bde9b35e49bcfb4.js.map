{"version":3,"file":"component---src-pages-login-js-5ec54bde9b35e49bcfb4.js","mappings":"iSAyEA,EA1DmB,WACjB,OAAsCA,EAAAA,EAAAA,WAAS,GAAxCC,EAAP,KAAoBC,EAApB,KACQC,GAAuBC,EAAAA,EAAAA,YAAWC,EAAAA,GAAlCF,mBACFG,EAAaC,EAAAA,UAAgB,IAC7BC,EAAgBD,EAAAA,UAAgB,IAEhCE,EAAa,mCAAG,WAAMC,GAAN,wEACpBA,EAAEC,iBADkB,SAEdC,IAAAA,KACKC,iDAAqC,CAC5CC,WAAYR,EAAWS,QAAQC,MAC/BC,SAAUT,EAAcO,QAAQC,QAEjCE,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZG,aAAaC,QAAQ,QAASC,KAAKC,UAAUN,EAAKA,KAAKO,MACvDJ,aAAaC,QAAQ,OAAQC,KAAKC,UAAUN,EAAKA,KAAKQ,KAAKC,WAC3DzB,GAAmB,IACnB0B,EAAAA,EAAAA,IAAS,QAEVC,OAAM,SAAAC,GAEL7B,GAAe,GACfkB,QAAQC,IAAIpB,GACZE,GAAmB,MAlBH,2CAAH,sDAsBnB,OACE,gBAAC,KAAD,KACE,gBAAC,KAAD,qBACCF,EAAc,gBAAC+B,EAAA,EAAD,oCAAqD,KACpE,gBAAC,KAAD,KACE,gBAACC,EAAA,EAAD,CACEC,OAAO,QACPC,QAAQ,QACRC,QAASnC,EACToC,IAAK/B,IAEP,gBAAC2B,EAAA,EAAD,CACEC,OAAO,WACPI,KAAK,WACLH,QAAQ,QACRC,QAASnC,EACToC,IAAK7B,IAEP,gBAAC+B,EAAA,EAAD,CAAQC,QAAM,EAACF,KAAK,SAASG,QAAS,SAAA/B,GAAC,OAAID,EAAcC,KAAzD,gBAKF,gBAAC,KAAD,CAAUgC,GAAG,aAAb,mBACkB,gBAAC,KAAD,4BC/DlBC,EAAeC,EAAAA,QAAAA,IAAAA,WAAH,8DAAGA,CAAH,2LAOI,qBAAGC,MAAkBC,OAAOC,YAclD,EARc,WACZ,OACE,gBAACJ,EAAD,KACE,gBAAC,EAAD,S,mMCjBOK,EAAmBJ,EAAAA,QAAAA,IAAAA,WAAH,4EAAGA,CAAH,uQASK,qBAAGC,MAAkBC,OAAOG,UACxC,qBAAGJ,MAAkBC,OAAOI,SAOrCC,EAAaP,EAAAA,QAAAA,EAAAA,WAAH,sEAAGA,CAAH,iDAGZ,qBAAGC,MAAkBC,OAAOM,aAE1BC,EAAWT,EAAAA,QAAAA,KAAAA,WAAH,oEAAGA,CAAH,oGAQRU,GAAWV,EAAAA,EAAAA,SAAOW,EAAAA,IAAV,+EAAGX,CAAH,qCAGV,qBAAGC,MAAkBC,OAAOU,YAE1BC,EAAcb,EAAAA,QAAAA,KAAAA,WAAH,uEAAGA,CAAH,gBACb,qBAAGC,MAAkBC,OAAOY,kBAE1BC,EAAmBf,EAAAA,QAAAA,EAAAA,WAAH,4EAAGA,CAAH,0FAGlB,qBAAGC,MAAkBC,OAAOU","sources":["webpack://slurp-recipes/./src/components/organisms/LoginPanel/LoginPanel.js","webpack://slurp-recipes/./src/pages/login.js","webpack://slurp-recipes/./src/styles/joinPanel.styles.js"],"sourcesContent":["import React, { useState, useContext } from \"react\"\nimport axios from \"axios\"\nimport Button from \"../../atoms/Button/Button\"\nimport { navigate } from \"gatsby\"\nimport { StateContext } from \"../../../context/StateContext\"\nimport {\n  JoinPanelWrapper,\n  JoinHeader,\n  JoinForm,\n  JoinLink,\n  ColoredText,\n} from \"../../../styles/joinPanel.styles\"\nimport FormField from \"../../molecules/FormField/FormField\"\nimport ErrorText from \"../../atoms/ErrorText/ErrorText\"\n\nconst LoginPanel = () => {\n  const [errorStatus, setErrorStatus] = useState(false)\n  const { setIsAuthenticated } = useContext(StateContext)\n  const loginInput = React.createRef({})\n  const passwordInput = React.createRef({})\n\n  const authorizeUser = async e => {\n    e.preventDefault()\n    await axios\n      .post(`${process.env.STRAPI_URL}/auth/local`, {\n        identifier: loginInput.current.value,\n        password: passwordInput.current.value,\n      })\n      .then(data => {\n        console.log(data)\n        localStorage.setItem(\"token\", JSON.stringify(data.data.jwt))\n        localStorage.setItem(\"user\", JSON.stringify(data.data.user.username))\n        setIsAuthenticated(true)\n        navigate(\"/\")\n      })\n      .catch(error => {\n        // alert(error)\n        setErrorStatus(true)\n        console.log(errorStatus)\n        setIsAuthenticated(false)\n      })\n  }\n\n  return (\n    <JoinPanelWrapper>\n      <JoinHeader>Zaloguj się.</JoinHeader>\n      {errorStatus ? <ErrorText>Niepoprawny login lub hasło</ErrorText> : null}\n      <JoinForm>\n        <FormField\n          nameId=\"login\"\n          content=\"Login\"\n          isError={errorStatus}\n          ref={loginInput}\n        />\n        <FormField\n          nameId=\"password\"\n          type=\"password\"\n          content=\"Hasło\"\n          isError={errorStatus}\n          ref={passwordInput}\n        />\n        <Button isLong type=\"submit\" onClick={e => authorizeUser(e)}>\n          Zaloguj się\n        </Button>\n      </JoinForm>\n\n      <JoinLink to=\"/register\">\n        Nie masz konta? <ColoredText>Zarejestruj się.</ColoredText>\n      </JoinLink>\n    </JoinPanelWrapper>\n  )\n}\n\nexport default LoginPanel\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport LoginPanel from \"../components/organisms/LoginPanel/LoginPanel\"\n\nconst LoginWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 90vh;\n  margin-top: 7rem;\n  background-color: ${({ theme }) => theme.colors.greenish};\n\n  @media only screen and (min-width: 768px) {\n    padding: 3rem;\n  }\n`\nconst Login = () => {\n  return (\n    <LoginWrapper>\n      <LoginPanel />\n    </LoginWrapper>\n  )\n}\n\nexport default Login\n","import { Link } from \"gatsby\"\nimport styled from \"styled-components\"\n\nexport const JoinPanelWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  justify-content: center;\n  height: auto;\n  width: 100%;\n  padding: 3rem;\n  border-radius: 6px;\n  box-shadow: 3px 2px 10px -3px ${({ theme }) => theme.colors.shadow};\n  background-color: ${({ theme }) => theme.colors.white};\n\n  @media only screen and (min-width: 768px) {\n    height: auto;\n    max-width: 600px;\n  }\n`\nexport const JoinHeader = styled.p`\n  font-weight: 300;\n  font-size: 3.2rem;\n  color: ${({ theme }) => theme.colors.fontColor};\n`\nexport const JoinForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding-top: 2rem;\n\n  @media only screen and (min-width: 768px) {\n  }\n`\nexport const JoinLink = styled(Link)`\n  text-decoration: none;\n  /* margin-top: 0.8rem; */\n  color: ${({ theme }) => theme.colors.darkGrey};\n`\nexport const ColoredText = styled.span`\n  color: ${({ theme }) => theme.colors.secondaryColor};\n`\nexport const PasswordInfoText = styled.p`\n  display: flex;\n  align-items: flex-start;\n  color: ${({ theme }) => theme.colors.darkGrey};\n  font-size: 1.6rem;\n  margin-bottom: 1.6rem;\n`\n"],"names":["useState","errorStatus","setErrorStatus","setIsAuthenticated","useContext","StateContext","loginInput","React","passwordInput","authorizeUser","e","preventDefault","axios","process","identifier","current","value","password","then","data","console","log","localStorage","setItem","JSON","stringify","jwt","user","username","navigate","catch","error","ErrorText","FormField","nameId","content","isError","ref","type","Button","isLong","onClick","to","LoginWrapper","styled","theme","colors","greenish","JoinPanelWrapper","shadow","white","JoinHeader","fontColor","JoinForm","JoinLink","Link","darkGrey","ColoredText","secondaryColor","PasswordInfoText"],"sourceRoot":""}