{"version":3,"file":"component---src-pages-register-js-0f8ae32b46c3a69efea2.js","mappings":"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","sources":["webpack://slurp-recipes/./src/components/organisms/NotificationPopup/NotificationPopup.js","webpack://slurp-recipes/./src/components/organisms/RegisterPanel/RegisterPanel.js","webpack://slurp-recipes/./src/pages/register.js","webpack://slurp-recipes/./src/styles/joinPanel.styles.js"],"sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport Button from \"../../atoms/Button/Button\"\nimport { AiOutlineCheckCircle } from \"react-icons/ai\"\n\nexport const Wrapper = styled.div`\n  position: absolute;\n  height: auto;\n  max-height: 200px;\n  max-width: 300px;\n  width: 100%;\n  padding: 2rem;\n  border-radius: 6px;\n  left: 50%;\n  top: 50%;\n  transform: translate(\n    ${({ isActive }) => (isActive ? \"-50%, 50%\" : \"-50%, 400px\")}\n  );\n  background-color: ${({ theme }) => theme.colors.lightGrey};\n  color: ${({ theme }) => theme.colors.fontColor};\n  box-shadow: 3px 2px 10px -3px ${({ theme }) => theme.colors.shadow};\n  border: 1px solid green;\n  transition: transform 0.3s ease-in-out;\n`\nexport const Title = styled.p`\n  border-bottom: 1px solid green;\n  color: ${({ theme }) => theme.colors.darkerSecondary};\n  text-align: center;\n  font-size: 2rem;\n  padding-bottom: 1rem;\n`\nexport const TextContainer = styled.div`\n  padding-top: 1.6rem;\n`\nexport const Text = styled.p`\n  font-size: 1.5rem;\n  font-family: \"Poppins\", sans-serif;/\n`\n\nexport const PopupBtn = styled(Button)`\n  border: none;\n  background-color: ${({ theme }) => theme.colors.offGreenish};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.secondaryColor};\n  }\n`\n\nconst NotificationPopup = ({ children, isActive = false, onClick }) => {\n  return (\n    <Wrapper isActive={isActive}>\n      <Title>\n        <AiOutlineCheckCircle /> Sukces!\n      </Title>\n      <TextContainer>\n        <Text>{children}</Text>\n      </TextContainer>\n      <PopupBtn onClick={onClick} isLong>\n        Ok\n      </PopupBtn>\n    </Wrapper>\n  )\n}\n\nexport default NotificationPopup\n","import React, { useState } from \"react\"\nimport axios from \"axios\"\nimport { navigate } from \"gatsby\"\nimport FormField from \"../../molecules/FormField/FormField\"\nimport Button from \"../../atoms/Button/Button\"\nimport NotificationPopup from \"../../organisms/NotificationPopup/NotificationPopup\"\nimport {\n  JoinPanelWrapper,\n  JoinHeader,\n  JoinForm,\n  JoinLink,\n  ColoredText,\n  PasswordInfoText,\n} from \"../../../styles/joinPanel.styles\"\nimport { AiOutlineQuestionCircle as QuestionIcon } from \"react-icons/ai\"\nimport ErrorText from \"../../atoms/ErrorText/ErrorText\"\n\nconst RegisterPanel = () => {\n  const [registerInfo, setRegisterInfo] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirm_password: \"\",\n  })\n  const [errorMessage, setErrorMessage] = useState(\"\")\n  const [isValid, setIsValid] = useState(true)\n  const [isPopupActive, setIsPopupActive] = useState(false)\n\n  const mailRegex = new RegExp(\n    \"([!#-'*+/-9=?A-Z^-~-]+(.[!#-'*+/-9=?A-Z^-~-]+)*|\\\"([]!#-[^-~ \\t]|(\\\\[\\t -~]))+\\\")@([!#-'*+/-9=?A-Z^-~-]+(.[!#-'*+/-9=?A-Z^-~-]+)*|[[\\t -Z^-~]*])\"\n  )\n  const passwordRegex = new RegExp(\"(?=.*[A-Z])(?=.*[a-z])(?=.*?[0-9])\")\n\n  const togglePopup = () => {\n    setIsPopupActive(!isPopupActive)\n\n    setTimeout(() => {\n      navigate(`/login`)\n    }, 3000)\n  }\n\n  // Aktualizacja stanu inputów\n  const updateInput = e => {\n    setRegisterInfo({ ...registerInfo, [e.target.name]: e.target.value })\n  }\n\n  // Walidacja formularza\n  const validateForm = () => {\n    // e.preventDefault()\n    errorInputsArray = []\n\n    // Walidacja nazwy uzytkownika\n    if (registerInfo[\"username\"] != \"\") {\n      setErrorStatus(\"username\", true)\n      setIsValid(true)\n    } else {\n      setErrorStatus(\"username\")\n      setErrorMessage(\"Nazwa użytkownika nie może być pusta\")\n      setIsValid(false)\n    }\n\n    // Walidacja email\n    if (mailRegex.test(registerInfo[\"email\"])) {\n      setErrorStatus(\"email\", true)\n    } else {\n      setErrorStatus(\"email\")\n      setErrorMessage(\"Adres e-mail niepoprawny\")\n      setIsValid(false)\n    }\n    // Walidacja hasła\n    if (passwordRegex.test(registerInfo[\"confirm_password\"])) {\n      if (registerInfo[\"password\"] === registerInfo[\"confirm_password\"]) {\n        setErrorStatus(\"password\", true)\n        setErrorStatus(\"confirm_password\", true)\n      } else {\n        setErrorStatus(\"password\")\n        setErrorStatus(\"confirm_password\")\n        setErrorMessage(\"Hasło musi zawierać conajmniej 1 cyfrę i duza literę\")\n        setIsValid(false)\n        return false\n      }\n    } else if (registerInfo[\"password\"].length < 8) {\n      console.log(\"Haslo za krotkie\")\n      setErrorStatus(\"password\")\n      setErrorStatus(\"confirm_password\")\n      setErrorMessage(\"Hasło za krótkie, musi mieć conajmniej 8 znaków\")\n      setIsValid(false)\n      return false\n    } else {\n      setErrorStatus(\"password\")\n      setErrorStatus(\"confirm_password\")\n      setErrorMessage(\"Hasła się różnią\")\n      setIsValid(false)\n      return false\n    }\n\n    return\n  }\n\n  // Wysłanie zapytania z rejestracją\n  const registerUser = async e => {\n    e.preventDefault()\n\n    validateForm()\n    if (isValid) {\n      await axios\n        .post(`${process.env.STRAPI_URL}/auth/local/register`, registerInfo)\n        .then(res => {\n          togglePopup()\n          console.log(res)\n        })\n        .catch(err => console.log(err))\n    } else {\n      console.log(\"Jest false nie wysyla requesta\")\n    }\n  }\n\n  let errorInput = \"\"\n  let errorInputsArray = []\n\n  const setErrorStatus = (inputName, remove = false) => {\n    if (remove === true) {\n      document\n        .querySelector(`input[id='${inputName}']`)\n        .classList.remove(\"invalid\")\n\n      console.log(\"ebe\")\n    } else {\n      errorInput = document.querySelector(`input[id='${inputName}']`)\n      errorInput.classList.add(\"invalid\")\n      errorInput.setAttribute(\"className\", \"invalid\")\n      errorInputsArray.push(errorInput)\n    }\n  }\n\n  return (\n    <JoinPanelWrapper>\n      <JoinHeader>Zarejestruj się.</JoinHeader>\n      <JoinForm>\n        <FormField\n          onChange={e => updateInput(e)}\n          nameId=\"username\"\n          content=\"Nazwa użytkownika\"\n        />\n        <FormField\n          onChange={e => updateInput(e)}\n          nameId=\"email\"\n          type=\"email\"\n          content=\"E-mail\"\n        />\n        <FormField\n          onChange={e => updateInput(e)}\n          nameId=\"password\"\n          type=\"password\"\n          content=\"Hasło\"\n        />\n        <FormField\n          onChange={e => updateInput(e)}\n          nameId=\"confirm_password\"\n          type=\"password\"\n          content=\"Powtórz hasło\"\n        />\n        <PasswordInfoText>\n          <QuestionIcon style={{ marginRight: \"1rem\" }} />\n          Hasło musi zawierać conajmniej 8 znaków w tym przynajmniej jedną cyfrę\n          i wielką literę\n        </PasswordInfoText>\n        {!isValid ? <ErrorText>{errorMessage}</ErrorText> : null}\n\n        <Button onClick={e => registerUser(e)} type=\"submit\" isLong>\n          Zarejestruj\n        </Button>\n      </JoinForm>\n      <JoinLink to=\"/login\">\n        Masz konto? <ColoredText>Zaloguj się.</ColoredText>\n      </JoinLink>\n      <NotificationPopup onClick={togglePopup} isActive={isPopupActive}>\n        Gratulacje, rejestracja przebiegła pomyślnie, zostaniesz przeniesiony na\n        stronę logowania\n      </NotificationPopup>\n    </JoinPanelWrapper>\n  )\n}\n\nexport default RegisterPanel\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport RegisterPanel from \"../components/organisms/RegisterPanel/RegisterPanel\"\n\nconst RegisterWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  margin-top: 7rem;\n  background-color: ${({ theme }) => theme.colors.greenish};\n\n  @media only screen and (min-width: 768px) {\n    padding: 3rem;\n  }\n`\n\nconst Register = () => {\n  return (\n    <RegisterWrapper>\n      <RegisterPanel />\n    </RegisterWrapper>\n  )\n}\n\nexport default Register\n","import { Link } from \"gatsby\"\nimport styled from \"styled-components\"\n\nexport const JoinPanelWrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  justify-content: center;\n  height: auto;\n  width: 100%;\n  padding: 3rem;\n  border-radius: 6px;\n  box-shadow: 3px 2px 10px -3px ${({ theme }) => theme.colors.shadow};\n  background-color: ${({ theme }) => theme.colors.white};\n  overflow: hidden;\n\n  @media only screen and (min-width: 768px) {\n    height: auto;\n    max-width: 600px;\n  }\n`\nexport const JoinHeader = styled.p`\n  font-weight: 300;\n  font-size: 3.2rem;\n  color: ${({ theme }) => theme.colors.fontColor};\n`\nexport const JoinForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding-top: 2rem;\n\n  @media only screen and (min-width: 768px) {\n  }\n`\nexport const JoinLink = styled(Link)`\n  text-decoration: none;\n  color: ${({ theme }) => theme.colors.darkGrey};\n`\nexport const ColoredText = styled.span`\n  color: ${({ theme }) => theme.colors.secondaryColor};\n`\nexport const PasswordInfoText = styled.p`\n  display: flex;\n  align-items: flex-start;\n  color: ${({ theme }) => theme.colors.darkGrey};\n  font-size: 1.6rem;\n  margin-bottom: 1.6rem;\n`\n"],"names":["Wrapper","styled","isActive","theme","colors","lightGrey","fontColor","shadow","Title","darkerSecondary","TextContainer","Text","PopupBtn","Button","offGreenish","secondaryColor","children","onClick","isLong","useState","username","email","password","confirm_password","registerInfo","setRegisterInfo","errorMessage","setErrorMessage","isValid","setIsValid","isPopupActive","setIsPopupActive","mailRegex","RegExp","passwordRegex","togglePopup","setTimeout","navigate","updateInput","e","target","name","value","registerUser","preventDefault","errorInputsArray","setErrorStatus","test","length","console","log","axios","process","then","res","catch","err","errorInput","inputName","remove","document","querySelector","classList","add","setAttribute","push","FormField","onChange","nameId","content","type","style","marginRight","ErrorText","to","RegisterWrapper","greenish","JoinPanelWrapper","white","JoinHeader","JoinForm","JoinLink","Link","darkGrey","ColoredText","PasswordInfoText"],"sourceRoot":""}