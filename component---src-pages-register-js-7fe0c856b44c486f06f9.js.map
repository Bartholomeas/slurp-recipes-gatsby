{"version":3,"file":"component---src-pages-register-js-7fe0c856b44c486f06f9.js","mappings":"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","sources":["webpack://slurp-recipes/./src/components/organisms/NotificationPopup/NotificationPopup.js","webpack://slurp-recipes/./src/components/organisms/RegisterPanel/RegisterPanel.js","webpack://slurp-recipes/./src/pages/register.js","webpack://slurp-recipes/./src/styles/joinPanel.styles.js"],"sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport Button from \"../../atoms/Button/Button\"\nimport { AiOutlineCheckCircle } from \"react-icons/ai\"\n\nexport const Wrapper = styled.div`\n  position: fixed;\n  flex-direction:column;\n  display:flex;\n  align-items:center;\n  justify-content:center;\n  height:auto;\n  max-height: 230px;\n  padding: 2rem;\n  left: 50%;\n  width:100%;\n  bottom:0;\n  transform: translateX(-50%) scale(${({ isActive }) => (isActive ? \"1\" : \"0\")});\n  transform-origin: bottom;\n  background-color: ${({ theme }) => theme.colors.white};\n  color: ${({ theme }) => theme.colors.fontColor};\n  border-radius: ${({ theme }) => theme.otherStyles.smallRadius};\n  transition: transform 0.1s ease;\n  box-shadow:${({theme})=> theme.otherStyles.shadow};\n  z-index:10000;\n`\nexport const Title = styled.p`\n  border-bottom: 1px solid green;\n  color: ${({ theme }) => theme.colors.accent};\n  text-align: center;\n  font-size: 2rem;\n  padding-bottom: 1rem;\n`\nexport const TextContainer = styled.div`\n  padding-top: 1.6rem;\n  max-width:300px;\n  text-align:center;\n`\nexport const Text = styled.p`\n  font-size: 1.5rem;\n  font-family: \"Poppins\", sans-serif;\n`\n\nexport const PopupBtn = styled(Button)`\n  border: none;\n  width:150px;\n  padding:1rem .8rem;\n  margin-top:1.6rem;\n  background-color: ${({ theme }) => theme.colors.base};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.accent};\n  }\n`\n\nconst NotificationPopup = ({ children, isActive = false, onClick }) => {\n  return (\n    <Wrapper isActive={isActive}>\n      <Title>\n        <AiOutlineCheckCircle /> Sukces!\n      </Title>\n      <TextContainer>\n        <Text>{children}</Text>\n      </TextContainer>\n      <PopupBtn onClick={onClick} isLong>\n        Przejdź\n      </PopupBtn>\n    </Wrapper>\n  )\n}\n\nexport default NotificationPopup\n","import React, { useState } from \"react\"\nimport axios from \"axios\"\nimport { navigate } from \"gatsby\"\nimport FormField from \"../../molecules/FormField/FormField\"\nimport Button from \"../../atoms/Button/Button\"\nimport NotificationPopup from \"../../organisms/NotificationPopup/NotificationPopup\"\nimport {\n  JoinPanelWrapper,\n  JoinHeader,\n  JoinForm,\n  JoinLink,\n  ColoredText,\n  PasswordInfoText,\n} from \"../../../styles/joinPanel.styles\"\nimport { AiOutlineQuestionCircle as QuestionIcon } from \"react-icons/ai\"\nimport ErrorText from \"../../atoms/ErrorText/ErrorText\"\nimport LoadingPopup from \"../../molecules/LoadingPopup/LoadingPopup\"\n\nconst RegisterPanel = () => {\n  const [registerInfo, setRegisterInfo] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirm_password: \"\",\n  })\n  const [isLoading, setIsLoading] = useState(false)\n  const [errorMessage, setErrorMessage] = useState(\"\")\n  const [isValid, setIsValid] = useState(true)\n  const [isPopupActive, setIsPopupActive] = useState(false)\n\n  const mailRegex = new RegExp(\n    \"([!#-'*+/-9=?A-Z^-~-]+(.[!#-'*+/-9=?A-Z^-~-]+)*|\\\"([]!#-[^-~ \\t]|(\\\\[\\t -~]))+\\\")@([!#-'*+/-9=?A-Z^-~-]+(.[!#-'*+/-9=?A-Z^-~-]+)*|[[\\t -Z^-~]*])\"\n  )\n  const passwordRegex = new RegExp(\"(?=.*[A-Z])(?=.*[a-z])(?=.*?[0-9])\")\n\n  const togglePopup = () => {\n    setIsPopupActive(!isPopupActive)\n\n    setTimeout(() => {\n      navigate(`/login`)\n    }, 5000)\n  }\n\n  const updateInput = e => {\n    setRegisterInfo({ ...registerInfo, [e.target.name]: e.target.value })\n  }\n\n  const validateForm = () => {\n    if (registerInfo[\"username\"] !== \"\") {\n      setErrorStatus(\"username\", true)\n      setIsValid(true)\n    } else {\n      setErrorStatus(\"username\")\n      setErrorMessage(\"Nazwa użytkownika nie może być pusta\")\n      setIsValid(false)\n    }\n\n    if (mailRegex.test(registerInfo[\"email\"])) {\n      setErrorStatus(\"email\", true)\n    } else {\n      setErrorStatus(\"email\")\n      setErrorMessage(\"Adres e-mail niepoprawny\")\n      setIsValid(false)\n    }\n    if (passwordRegex.test(registerInfo[\"confirm_password\"])) {\n      if (registerInfo[\"password\"] === registerInfo[\"confirm_password\"]) {\n        setErrorStatus(\"password\", true)\n        setErrorStatus(\"confirm_password\", true)\n      } else {\n        setErrorStatus(\"password\")\n        setErrorStatus(\"confirm_password\")\n        setErrorMessage(\"Hasło musi zawierać conajmniej 1 cyfrę i duza literę\")\n        setIsValid(false)\n        return false\n      }\n    } else if (registerInfo[\"password\"].length < 8) {\n      console.log(\"Haslo za krotkie\")\n      setErrorStatus(\"password\")\n      setErrorStatus(\"confirm_password\")\n      setErrorMessage(\"Hasło za krótkie, musi mieć conajmniej 8 znaków\")\n      setIsValid(false)\n      return false\n    } else {\n      setErrorStatus(\"password\")\n      setErrorStatus(\"confirm_password\")\n      setErrorMessage(\"Hasła się różnią\")\n      setIsValid(false)\n      return false\n    }\n  }\n\n  const registerUser = async e => {\n    e.preventDefault()\n    setIsLoading(true)\n    validateForm()\n    if (isValid) {\n      try {\n        await axios.post(\n          `${process.env.STRAPI_URL}/auth/local/register`,\n          registerInfo\n        )\n        togglePopup()\n        setIsLoading(false)\n      } catch (error) {\n        setIsLoading(false)\n        console.log(error)\n      }\n    }\n  }\n\n  let errorInput = \"\"\n  const setErrorStatus = (inputName, remove = false) => {\n    if (typeof window !== \"undefined\") {\n      if (remove === true) {\n        document\n          .querySelector(`input[id='${inputName}']`)\n          .classList.remove(\"invalid\")\n      } else {\n        errorInput = document.querySelector(`input[id='${inputName}']`)\n        errorInput.classList.add(\"invalid\")\n        errorInput.setAttribute(\"className\", \"invalid\")\n      }\n    }\n  }\n\n  return (\n    <>\n      <JoinPanelWrapper>\n        <JoinHeader>Zarejestruj się.</JoinHeader>\n        <JoinForm>\n          <FormField\n            onChange={e => updateInput(e)}\n            nameId=\"username\"\n            content=\"Nazwa użytkownika\"\n          />\n          <FormField\n            onChange={e => updateInput(e)}\n            nameId=\"email\"\n            type=\"email\"\n            content=\"E-mail\"\n          />\n          <FormField\n            onChange={e => updateInput(e)}\n            nameId=\"password\"\n            type=\"password\"\n            content=\"Hasło\"\n          />\n          <FormField\n            onChange={e => updateInput(e)}\n            nameId=\"confirm_password\"\n            type=\"password\"\n            content=\"Powtórz hasło\"\n          />\n          <PasswordInfoText>\n            <QuestionIcon style={{ marginRight: \"1rem\" }} />\n            Hasło musi zawierać conajmniej 8 znaków w tym przynajmniej jedną\n            cyfrę i wielką literę\n          </PasswordInfoText>\n          {!isValid ? <ErrorText>{errorMessage}</ErrorText> : null}\n\n          <Button onClick={e => registerUser(e)} type=\"submit\" isLong>\n            Zarejestruj\n          </Button>\n        </JoinForm>\n        <JoinLink to=\"/login\">\n          Masz konto? <ColoredText>Zaloguj się.</ColoredText>\n        </JoinLink>\n        <NotificationPopup\n          onClick={() => navigate(`/login`)}\n          isActive={isPopupActive}\n        >\n          Zostałeś zarejestrowany, trwa przenoszenie na stronę logowania\n        </NotificationPopup>\n      </JoinPanelWrapper>\n      {isLoading && <LoadingPopup />}\n    </>\n  )\n}\n\nexport default RegisterPanel\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport RegisterPanel from \"../components/organisms/RegisterPanel/RegisterPanel\"\n\nconst RegisterWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  margin-top: 7rem;\n  background-color: ${({ theme }) => theme.colors.base};\n\n  @media only screen and (min-width: 768px) {\n    padding: 3rem;\n  }\n`\n\nconst Register = () => {\n  return (\n    <RegisterWrapper>\n      <RegisterPanel />\n    </RegisterWrapper>\n  )\n}\n\nexport default Register\n","import { Link } from \"gatsby\"\nimport styled from \"styled-components\"\n\nexport const JoinPanelWrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  justify-content: center;\n  height: auto;\n  width: 100%;\n  padding: 3rem;\n  border-radius: ${({ theme }) => theme.otherStyles.smallRadius};\n  box-shadow: 3px 2px 10px -3px ${({ theme }) => theme.otherStyles.shadow};\n  background-color: ${({ theme }) => theme.colors.white};\n  overflow: hidden;\n\n  @media only screen and (min-width: 768px) {\n    height: auto;\n    max-width: 600px;\n  }\n`\nexport const JoinHeader = styled.p`\n  font-weight: 300;\n  font-size: 3.2rem;\n  color: ${({ theme }) => theme.colors.fontColor};\n`\nexport const JoinForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding-top: 2rem;\n\n  @media only screen and (min-width: 768px) {\n  }\n`\nexport const JoinLink = styled(Link)`\n  text-decoration: none;\n  font-size: 1.2rem;\n  margin: 1rem 0;\n  color: ${({ theme }) => theme.colors.darkGrey};\n`\nexport const ColoredText = styled.span`\n  color: ${({ theme }) => theme.colors.accent};\n`\nexport const PasswordInfoText = styled.p`\n  display: flex;\n  align-items: flex-start;\n  color: ${({ theme }) => theme.colors.darkGrey};\n  font-size: 1.6rem;\n  margin-bottom: 1.6rem;\n`\n"],"names":["Wrapper","styled","isActive","theme","colors","white","fontColor","otherStyles","smallRadius","shadow","Title","accent","TextContainer","Text","PopupBtn","Button","base","children","onClick","isLong","useState","username","email","password","confirm_password","registerInfo","setRegisterInfo","isLoading","setIsLoading","errorMessage","setErrorMessage","isValid","setIsValid","isPopupActive","setIsPopupActive","mailRegex","RegExp","passwordRegex","updateInput","e","target","name","value","registerUser","preventDefault","setErrorStatus","test","length","console","log","axios","process","setTimeout","navigate","errorInput","inputName","remove","window","document","querySelector","classList","add","setAttribute","FormField","onChange","nameId","content","type","style","marginRight","ErrorText","to","NotificationPopup","LoadingPopup","RegisterWrapper","JoinPanelWrapper","JoinHeader","JoinForm","JoinLink","Link","darkGrey","ColoredText","PasswordInfoText"],"sourceRoot":""}